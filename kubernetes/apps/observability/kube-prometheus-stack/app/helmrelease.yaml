---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
    namespace: flux-system
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  values:
    crds:
      upgradeJob:
        enabled: true
        forceConflicts: true

    cleanPrometheusOperatorObjectNames: true

    alertmanager:
      ingres:
        enabled: true
        ingressClassName: internal
        hosts:
          - alertmanager.${SECRET_DOMAIN}

    kubeEtcd:
      service:
        selector:
          component: kube-apiserver # etcd runs on control plane nodes

    kubeProxy:
      enabled: false

    grafana:
      enabled: true
      forceDeployDashboards: true
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - grafana.${SECRET_DOMAIN}
      additionalPrometheusRulesMap:
        oom-rules:
          groups:
            - name: "oom-rules"
              rules:
                - alert: OOMKilled
                  expr: (kube_pod_container_status_terminated_reason{reason="OOMKilled"} > 0)
                  for: 5m
                  labels:
                    severity: warning
                  annotations:
                    summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} was OOMKilled"
                    description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} was OOMKilled on {{ $value}}"

    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - prometheus.${SECRET_DOMAIN}
      prometheusSpec:
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        retention: 30d
        retentionSize: 50GB
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2000Mi

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node

    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowList:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node
