theme: dark

log:
  level: debug

server:
  address: tcp://0.0.0.0:9091
  disable_healthcheck: true

telemetry:
  metrics:
    enabled: true
    address: tcp://0.0.0.0:8080

totp:
  disable: false

duo_api:
  disable: false
  enable_self_enrollment: true

webauthn:
  disable: true

authentication_backend:
  password_reset:
    disable: false
  refresh_interval: 1m
  ldap:
    implementation: custom
    address: ldap://ldap.marcolongo.dev:389
    timeout: 5s
    start_tls: false
    additional_users_dn: cn=users
    users_filter: "(&(|({username_attribute}={input})(mail={input}))(objectClass=inetOrgPerson)(shadowExpire=-1)(mail=*))"
    additional_groups_dn: cn=groups
    groups_filter: "(member={dn})"
    group_search_mode: filter
    attributes:
      username: uid
      display_name: displayName
      mail: mail
      group_name: cn
      member_of: memberOf

session:
  name: authelia_session
  same_site: lax
  expiration: 1h
  inactivity: 15m
  remember_me: 1M
  cookies:
    - domain: ${SECRET_DOMAIN}
      authelia_url: https://auth.${SECRET_DOMAIN}
      default_redirection_url: https://${SECRET_DOMAIN}

notifier:
  disable_startup_check: true
  smtp:
    address: submission://mail.${SECRET_DOMAIN}:587
    username: admin@${SECRET_DOMAIN}
    sender: Authelia <admin@${SECRET_DOMAIN}>

access_control:
  default_policy: deny
  networks:
    - name: internal
      networks:
        - 10.0.0.0/8
  rules:
    - domain:
        - "auth.${SECRET_DOMAIN}"
        - "echo-server.${SECRET_DOMAIN}"
      policy: bypass

    - domain:
        - "actual.${SECRET_DOMAIN}"
      policy: one_factor
      subject:
        - "group:actual_users"

    - domain:
        - "paperless.${SECRET_DOMAIN}"
      policy: bypass
      resources:
        - "^/share/.*$"

    - domain:
        - "paperless.${SECRET_DOMAIN}"
      policy: one_factor
      subject:
        - "group:paperless_users"

    - domain: "*.${SECRET_DOMAIN}"
      policy: bypass
      methods:
        - OPTIONS

identity_providers:
  oidc:
    jwks:
      - algorithm: RS256
        # docker run --rm -u "$(id -u):$(id -g)" -v "$(pwd)":/keys authelia/authelia:latest authelia crypto pair rsa generate --directory /keys
        key: |-
          {{- env "OIDC_JWKS_KEY" | nindent 10 }}
    enable_client_debug_messages: true
    cors:
      endpoints: [authorization, token, revocation, introspection]
      allowed_origins_from_client_redirect_uris: true
    clients:
      - client_name: Actual
        # docker run --rm authelia/authelia:latest authelia crypto rand --length 72 --charset rfc3986
        client_id: '{{ env "ACTUAL_OIDC_CLIENT_ID" }}'
        # docker run authelia/authelia:latest authelia crypto hash generate pbkdf2 --variant sha512 --random --random.length 72 --random.charset rfc3986
        client_secret: '{{ env "ACTUAL_OIDC_CLIENT_HASHED_SECRET" }}'
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        redirect_uris: ["https://actual.${SECRET_DOMAIN}/openid/callback"]
        scopes: [openid, profile, email, groups]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      - client_name: Paperless
        # docker run --rm authelia/authelia:latest authelia crypto rand --length 72 --charset rfc3986
        client_id: '{{ env "PAPERLESS_OIDC_CLIENT_ID" }}'
        # docker run authelia/authelia:latest authelia crypto hash generate pbkdf2 --variant sha512 --random --random.length 72 --random.charset rfc3986
        client_secret: '{{ env "PAPERLESS_OIDC_CLIENT_HASHED_SECRET" }}'
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        redirect_uris:
          - "https://paperless.${SECRET_DOMAIN}/accounts/oidc/authelia/login/callback/"
        scopes: [openid, profile, email, groups]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
